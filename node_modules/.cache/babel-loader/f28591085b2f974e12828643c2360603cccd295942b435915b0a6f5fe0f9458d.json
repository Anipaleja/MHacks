{"ast":null,"code":"var _jsxFileName = \"/Users/james/Documents/GitHub/-pennhacks/MHacks/src/app.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialTasks = [{\n  id: 1,\n  text: \"Task 1\"\n}, {\n  id: 2,\n  text: \"Task 2\"\n}, {\n  id: 3,\n  text: \"Task 3\"\n}, {\n  id: 4,\n  text: \"Task 4\"\n}];\nconst suggestedTasks = [{\n  id: 5,\n  text: \"Task 1\"\n}, {\n  id: 6,\n  text: \"Task 2\"\n}];\nconst notes = [{\n  id: 1,\n  text: \"Note #1\"\n}, {\n  id: 2,\n  text: \"Recording #1\"\n}];\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState(initialTasks);\n  const [isListening, setIsListening] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [status, setStatus] = useState(\"Listening for 'Hey Google'...\");\n  const recognitionRef = useRef(null);\n  const silenceTimerRef = useRef(null);\n  const taskIdRef = useRef(7);\n  useEffect(() => {\n    // Check if speech recognition is supported\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      setStatus(\"Speech recognition not supported in this browser\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n    recognition.onresult = event => {\n      const lastResult = event.results[event.results.length - 1];\n      const transcript = lastResult[0].transcript.toLowerCase().trim();\n      if (!isRecording) {\n        // Listen for wake phrase\n        if (transcript.includes('hey google')) {\n          setIsRecording(true);\n          setStatus(\"🔴 Recording... (will stop after 3 seconds of silence)\");\n\n          // Clear any existing timer\n          if (silenceTimerRef.current) {\n            window.clearTimeout(silenceTimerRef.current);\n          }\n        }\n      } else {\n        // Recording mode - capture the task\n        const taskText = transcript.replace(/hey google/gi, '').trim();\n        if (taskText && lastResult.isFinal) {\n          // Add the task\n          const newTask = {\n            id: taskIdRef.current++,\n            text: taskText\n          };\n          setTasks(prev => [...prev, newTask]);\n          setIsRecording(false);\n          setStatus(\"✅ Task added! Listening for 'Hey Google'...\");\n\n          // Clear silence timer\n          if (silenceTimerRef.current) {\n            window.clearTimeout(silenceTimerRef.current);\n          }\n        }\n\n        // Reset silence timer\n        if (silenceTimerRef.current) {\n          window.clearTimeout(silenceTimerRef.current);\n        }\n        silenceTimerRef.current = window.setTimeout(() => {\n          if (isRecording) {\n            setIsRecording(false);\n            setStatus(\"⏰ Stopped recording (silence timeout). Listening for 'Hey Google'...\");\n          }\n        }, 3000);\n      }\n    };\n    recognition.onerror = event => {\n      console.error('Speech recognition error:', event.error);\n      setStatus(`Error: ${event.error}. Listening for 'Hey Google'...`);\n    };\n    recognition.onend = () => {\n      // Restart recognition to keep it continuous\n      if (recognitionRef.current) {\n        setTimeout(() => {\n          try {\n            var _recognitionRef$curre;\n            (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.start();\n          } catch (error) {\n            console.log('Recognition restart prevented:', error);\n          }\n        }, 100);\n      }\n    };\n    recognitionRef.current = recognition;\n\n    // Start listening\n    try {\n      recognition.start();\n    } catch (error) {\n      setStatus(\"Error starting speech recognition\");\n    }\n\n    // Cleanup\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      if (silenceTimerRef.current) {\n        window.clearTimeout(silenceTimerRef.current);\n      }\n    };\n  }, [isRecording]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"speech-status\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-indicator ${isListening ? 'listening' : ''} ${isRecording ? 'recording' : ''}`,\n        children: isRecording ? '🔴' : isListening ? '🎤' : '❌'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCCB Tasks \\u2795\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: task.text\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Suggested Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: suggestedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: task.text\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"home-button\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"\\uD83D\\uDCDD Notes \\u2B07\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list\",\n          children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-item\",\n            children: note.text\n          }, note.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Y/Pyvz9722HKdQcXt95RzOZjSQ8=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","initialTasks","id","text","suggestedTasks","notes","App","_s","tasks","setTasks","isListening","setIsListening","isRecording","setIsRecording","status","setStatus","recognitionRef","silenceTimerRef","taskIdRef","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onstart","onresult","event","lastResult","results","length","transcript","toLowerCase","trim","includes","current","clearTimeout","taskText","replace","isFinal","newTask","prev","setTimeout","onerror","console","error","onend","_recognitionRef$curre","start","log","stop","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","note","_c","$RefreshReg$"],"sources":["/Users/james/Documents/GitHub/-pennhacks/MHacks/src/app.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./app.css\";\n\ntype Task = { id: number; text: string };\ntype Note = { id: number; text: string };\n\nconst initialTasks: Task[] = [\n  { id: 1, text: \"Task 1\" },\n  { id: 2, text: \"Task 2\" },\n  { id: 3, text: \"Task 3\" },\n  { id: 4, text: \"Task 4\" },\n];\n\nconst suggestedTasks: Task[] = [\n  { id: 5, text: \"Task 1\" },\n  { id: 6, text: \"Task 2\" },\n];\n\nconst notes: Note[] = [\n  { id: 1, text: \"Note #1\" },\n  { id: 2, text: \"Recording #1\" },\n];\n\nexport default function App() {\n  const [tasks, setTasks] = useState<Task[]>(initialTasks);\n  const [isListening, setIsListening] = useState(false);\n  const [isRecording, setIsRecording] = useState(false);\n  const [status, setStatus] = useState(\"Listening for 'Hey Google'...\");\n  \n  const recognitionRef = useRef<any>(null);\n  const silenceTimerRef = useRef<number | null>(null);\n  const taskIdRef = useRef(7);\n\n  useEffect(() => {\n    // Check if speech recognition is supported\n    const SpeechRecognition = (window as any).SpeechRecognition || (window as any).webkitSpeechRecognition;\n    \n    if (!SpeechRecognition) {\n      setStatus(\"Speech recognition not supported in this browser\");\n      return;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n\n    recognition.onstart = () => {\n      setIsListening(true);\n    };\n\n    recognition.onresult = (event: any) => {\n      const lastResult = event.results[event.results.length - 1];\n      const transcript = lastResult[0].transcript.toLowerCase().trim();\n\n      if (!isRecording) {\n        // Listen for wake phrase\n        if (transcript.includes('hey google')) {\n          setIsRecording(true);\n          setStatus(\"🔴 Recording... (will stop after 3 seconds of silence)\");\n          \n          // Clear any existing timer\n          if (silenceTimerRef.current) {\n            window.clearTimeout(silenceTimerRef.current);\n          }\n        }\n      } else {\n        // Recording mode - capture the task\n        const taskText = transcript.replace(/hey google/gi, '').trim();\n        \n        if (taskText && lastResult.isFinal) {\n          // Add the task\n          const newTask: Task = {\n            id: taskIdRef.current++,\n            text: taskText\n          };\n          \n          setTasks(prev => [...prev, newTask]);\n          setIsRecording(false);\n          setStatus(\"✅ Task added! Listening for 'Hey Google'...\");\n          \n          // Clear silence timer\n          if (silenceTimerRef.current) {\n            window.clearTimeout(silenceTimerRef.current);\n          }\n        }\n        \n        // Reset silence timer\n        if (silenceTimerRef.current) {\n          window.clearTimeout(silenceTimerRef.current);\n        }\n        \n        silenceTimerRef.current = window.setTimeout(() => {\n          if (isRecording) {\n            setIsRecording(false);\n            setStatus(\"⏰ Stopped recording (silence timeout). Listening for 'Hey Google'...\");\n          }\n        }, 3000);\n      }\n    };\n\n    recognition.onerror = (event: any) => {\n      console.error('Speech recognition error:', event.error);\n      setStatus(`Error: ${event.error}. Listening for 'Hey Google'...`);\n    };\n\n    recognition.onend = () => {\n      // Restart recognition to keep it continuous\n      if (recognitionRef.current) {\n        setTimeout(() => {\n          try {\n            recognitionRef.current?.start();\n          } catch (error) {\n            console.log('Recognition restart prevented:', error);\n          }\n        }, 100);\n      }\n    };\n\n    recognitionRef.current = recognition;\n\n    // Start listening\n    try {\n      recognition.start();\n    } catch (error) {\n      setStatus(\"Error starting speech recognition\");\n    }\n\n    // Cleanup\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n      if (silenceTimerRef.current) {\n        window.clearTimeout(silenceTimerRef.current);\n      }\n    };\n  }, [isRecording]);\n\n  return (\n    <div className=\"container\">\n      {/* Speech Status */}\n      <div className=\"speech-status\">\n        <div className={`status-indicator ${isListening ? 'listening' : ''} ${isRecording ? 'recording' : ''}`}>\n          {isRecording ? '🔴' : isListening ? '🎤' : '❌'}\n        </div>\n        <span>{status}</span>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"main-content\">\n        {/* Left - Tasks */}\n        <div className=\"sidebar\">\n          <h3>📋 Tasks ➕</h3>\n          <ul className=\"list\">\n            {tasks.map((task) => (\n              <li key={task.id} className=\"list-item\">\n                {task.text}\n              </li>\n            ))}\n          </ul>\n\n          <h4>Suggested Tasks</h4>\n          <ul className=\"list\">\n            {suggestedTasks.map((task) => (\n              <li key={task.id} className=\"list-item\">\n                {task.text}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Middle - Home Button */}\n        <div className=\"center\">\n          <button className=\"home-button\">Home</button>\n        </div>\n\n        {/* Right - Notes */}\n        <div className=\"sidebar\">\n          <h3>📝 Notes ⬇</h3>\n          <ul className=\"list\">\n            {notes.map((note) => (\n              <li key={note.id} className=\"list-item\">\n                {note.text}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}